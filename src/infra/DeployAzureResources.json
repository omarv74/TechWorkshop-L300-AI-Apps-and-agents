{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "13739451650382626457"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources."
      }
    }
  },
  "variables": {
    "cosmosDbName": "[format('{0}-cosmosdb', uniqueString(resourceGroup().id))]",
    "cosmosDbDatabaseName": "zava",
    "storageAccountName": "[format('{0}sa', uniqueString(resourceGroup().id))]",
    "aiFoundryName": "[format('aif-{0}', uniqueString(resourceGroup().id))]",
    "aiProjectName": "[format('proj-{0}', uniqueString(resourceGroup().id))]",
    "searchServiceName": "[format('{0}-search', uniqueString(resourceGroup().id))]",
    "webAppName": "[format('{0}-app', uniqueString(resourceGroup().id))]",
    "appServicePlanName": "[format('{0}-cosu-asp', uniqueString(resourceGroup().id))]",
    "logAnalyticsName": "[format('{0}-cosu-la', uniqueString(resourceGroup().id))]",
    "appInsightsName": "[format('{0}-cosu-ai', uniqueString(resourceGroup().id))]",
    "webAppSku": "S1",
    "registryName": "[format('{0}cosureg', uniqueString(resourceGroup().id))]",
    "registrySku": "Standard",
    "locations": [
      {
        "locationName": "[parameters('location')]",
        "failoverPriority": 0,
        "isZoneRedundant": false
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmosDbName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "databaseAccountOfferType": "Standard",
        "locations": "[variables('locations')]",
        "disableLocalAuth": false
      },
      "metadata": {
        "description": "Creates an Azure Cosmos DB NoSQL account."
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}', variables('cosmosDbName'), variables('cosmosDbDatabaseName'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbDatabaseName')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName'))]"
      ],
      "metadata": {
        "description": "Creates an Azure Cosmos DB NoSQL API database."
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      },
      "metadata": {
        "description": "Creates an Azure Storage account."
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2025-04-01-preview",
      "name": "[variables('aiFoundryName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "sku": {
        "name": "S0"
      },
      "kind": "AIServices",
      "properties": {
        "allowProjectManagement": true,
        "customSubDomainName": "[variables('aiFoundryName')]",
        "disableLocalAuth": false
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/projects",
      "apiVersion": "2025-04-01-preview",
      "name": "[format('{0}/{1}', variables('aiFoundryName'), variables('aiProjectName'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]"
      ]
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2023-11-01",
      "name": "[variables('searchServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "standard"
      },
      "metadata": {
        "description": "Creates an Azure AI Search service."
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 90,
        "workspaceCapping": {
          "dailyQuotaGb": 1
        }
      },
      "metadata": {
        "description": "Creates an Azure Log Analytics workspace."
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ],
      "metadata": {
        "description": "Creates an Azure Application Insights resource."
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2022-12-01",
      "name": "[variables('registryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('registrySku')]"
      },
      "properties": {
        "adminUserEnabled": true
      },
      "metadata": {
        "description": "Creates an Azure Container Registry."
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "sku": {
        "name": "[variables('webAppSku')]"
      },
      "metadata": {
        "description": "Creates an Azure App Service Plan."
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "clientAffinityEnabled": false,
        "siteConfig": {
          "linuxFxVersion": "[format('DOCKER|{0}.azurecr.io/{1}/techworkshopl300/zava', variables('registryName'), uniqueString(resourceGroup().id))]",
          "http20Enabled": true,
          "minTlsVersion": "1.2",
          "appCommandLine": "",
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[format('https://{0}.azurecr.io', variables('registryName'))]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[variables('registryName')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('registryName')), '2022-12-01').passwords[0].value]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02-preview').InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('registryName'))]"
      ],
      "metadata": {
        "description": "Creates an Azure App Service for Zava."
      }
    }
  ],
  "outputs": {
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2023-04-15').documentEndpoint]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "searchServiceName": {
      "type": "string",
      "value": "[variables('searchServiceName')]"
    },
    "container_registry_name": {
      "type": "string",
      "value": "[variables('registryName')]"
    },
    "application_name": {
      "type": "string",
      "value": "[variables('webAppName')]"
    },
    "application_url": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')), '2022-09-01').hostNames[0]]"
    }
  }
}